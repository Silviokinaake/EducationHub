// <auto-generated />
using System;
using EducationHub.Alunos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationHub.Alunos.Data.Migrations.Alunos
{
    [DbContext(typeof(AlunoDbContext))]
    partial class AlunoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TituloCurso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CursoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Certificado", b =>
                {
                    b.HasOne("EducationHub.Alunos.Domain.Entidades.Aluno", null)
                        .WithMany("Certificados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Matricula", b =>
                {
                    b.HasOne("EducationHub.Alunos.Domain.Entidades.Aluno", null)
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("EducationHub.Alunos.Domain.Entidades.HistoricoAprendizado", "Historico", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CursoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DataUltimaAtualizacao")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("MatriculaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("ProgressoPercentual")
                                .HasColumnType("float");

                            b1.HasKey("Id");

                            b1.HasIndex("MatriculaId");

                            b1.ToTable("MatriculaHistoricos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MatriculaId");
                        });

                    b.Navigation("Historico");
                });

            modelBuilder.Entity("EducationHub.Alunos.Domain.Entidades.Aluno", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
